
target3:     file format elf32-i386


Disassembly of section .init:

08049000 <_init>:
 8049000:	f3 0f 1e fb          	endbr32 
 8049004:	53                   	push   %ebx
 8049005:	83 ec 08             	sub    $0x8,%esp
 8049008:	e8 f3 00 00 00       	call   8049100 <__x86.get_pc_thunk.bx>
 804900d:	81 c3 f3 2f 00 00    	add    $0x2ff3,%ebx
 8049013:	8b 83 f8 ff ff ff    	mov    -0x8(%ebx),%eax
 8049019:	85 c0                	test   %eax,%eax
 804901b:	74 02                	je     804901f <_init+0x1f>
 804901d:	ff d0                	call   *%eax
 804901f:	83 c4 08             	add    $0x8,%esp
 8049022:	5b                   	pop    %ebx
 8049023:	c3                   	ret    

Disassembly of section .plt:

08049030 <.plt>:
 8049030:	ff 35 04 c0 04 08    	pushl  0x804c004
 8049036:	ff 25 08 c0 04 08    	jmp    *0x804c008
 804903c:	00 00                	add    %al,(%eax)
	...

08049040 <__libc_start_main@plt>:
 8049040:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 8049046:	68 00 00 00 00       	push   $0x0
 804904b:	e9 e0 ff ff ff       	jmp    8049030 <.plt>

08049050 <fwrite@plt>:
 8049050:	ff 25 10 c0 04 08    	jmp    *0x804c010
 8049056:	68 08 00 00 00       	push   $0x8
 804905b:	e9 d0 ff ff ff       	jmp    8049030 <.plt>

08049060 <exit@plt>:
 8049060:	ff 25 14 c0 04 08    	jmp    *0x804c014
 8049066:	68 10 00 00 00       	push   $0x10
 804906b:	e9 c0 ff ff ff       	jmp    8049030 <.plt>

08049070 <strlen@plt>:
 8049070:	ff 25 18 c0 04 08    	jmp    *0x804c018
 8049076:	68 18 00 00 00       	push   $0x18
 804907b:	e9 b0 ff ff ff       	jmp    8049030 <.plt>

Disassembly of section .text:

08049080 <main>:
 8049080:	83 7c 24 04 02       	cmpl   $0x2,0x4(%esp)
 8049085:	75 0d                	jne    8049094 <main+0x14>
 8049087:	ff 74 24 08          	pushl  0x8(%esp)
 804908b:	e8 c0 01 00 00       	call   8049250 <foo>
 8049090:	58                   	pop    %eax
 8049091:	31 c0                	xor    %eax,%eax
 8049093:	c3                   	ret    
 8049094:	ff 35 20 c0 04 08    	pushl  0x804c020
 804909a:	6a 13                	push   $0x13
 804909c:	6a 01                	push   $0x1
 804909e:	68 0c a0 04 08       	push   $0x804a00c
 80490a3:	e8 a8 ff ff ff       	call   8049050 <fwrite@plt>
 80490a8:	6a 01                	push   $0x1
 80490aa:	e8 b1 ff ff ff       	call   8049060 <exit@plt>
 80490af:	90                   	nop

080490b0 <_start>:
 80490b0:	f3 0f 1e fb          	endbr32 
 80490b4:	31 ed                	xor    %ebp,%ebp
 80490b6:	5e                   	pop    %esi
 80490b7:	89 e1                	mov    %esp,%ecx
 80490b9:	83 e4 f0             	and    $0xfffffff0,%esp
 80490bc:	50                   	push   %eax
 80490bd:	54                   	push   %esp
 80490be:	52                   	push   %edx
 80490bf:	e8 19 00 00 00       	call   80490dd <_start+0x2d>
 80490c4:	81 c3 3c 2f 00 00    	add    $0x2f3c,%ebx
 80490ca:	6a 00                	push   $0x0
 80490cc:	6a 00                	push   $0x0
 80490ce:	51                   	push   %ecx
 80490cf:	56                   	push   %esi
 80490d0:	c7 c0 80 90 04 08    	mov    $0x8049080,%eax
 80490d6:	50                   	push   %eax
 80490d7:	e8 64 ff ff ff       	call   8049040 <__libc_start_main@plt>
 80490dc:	f4                   	hlt    
 80490dd:	8b 1c 24             	mov    (%esp),%ebx
 80490e0:	c3                   	ret    
 80490e1:	66 90                	xchg   %ax,%ax
 80490e3:	66 90                	xchg   %ax,%ax
 80490e5:	66 90                	xchg   %ax,%ax
 80490e7:	66 90                	xchg   %ax,%ax
 80490e9:	66 90                	xchg   %ax,%ax
 80490eb:	66 90                	xchg   %ax,%ax
 80490ed:	66 90                	xchg   %ax,%ax
 80490ef:	90                   	nop

080490f0 <_dl_relocate_static_pie>:
 80490f0:	f3 0f 1e fb          	endbr32 
 80490f4:	c3                   	ret    
 80490f5:	66 90                	xchg   %ax,%ax
 80490f7:	66 90                	xchg   %ax,%ax
 80490f9:	66 90                	xchg   %ax,%ax
 80490fb:	66 90                	xchg   %ax,%ax
 80490fd:	66 90                	xchg   %ax,%ax
 80490ff:	90                   	nop

08049100 <__x86.get_pc_thunk.bx>:
 8049100:	8b 1c 24             	mov    (%esp),%ebx
 8049103:	c3                   	ret    
 8049104:	66 90                	xchg   %ax,%ax
 8049106:	66 90                	xchg   %ax,%ax
 8049108:	66 90                	xchg   %ax,%ax
 804910a:	66 90                	xchg   %ax,%ax
 804910c:	66 90                	xchg   %ax,%ax
 804910e:	66 90                	xchg   %ax,%ax

08049110 <deregister_tm_clones>:
 8049110:	e8 c4 00 00 00       	call   80491d9 <__x86.get_pc_thunk.dx>
 8049115:	81 c2 eb 2e 00 00    	add    $0x2eeb,%edx
 804911b:	8d 8a 20 00 00 00    	lea    0x20(%edx),%ecx
 8049121:	8d 82 20 00 00 00    	lea    0x20(%edx),%eax
 8049127:	39 c8                	cmp    %ecx,%eax
 8049129:	74 1d                	je     8049148 <deregister_tm_clones+0x38>
 804912b:	8b 82 f4 ff ff ff    	mov    -0xc(%edx),%eax
 8049131:	85 c0                	test   %eax,%eax
 8049133:	74 13                	je     8049148 <deregister_tm_clones+0x38>
 8049135:	55                   	push   %ebp
 8049136:	89 e5                	mov    %esp,%ebp
 8049138:	83 ec 14             	sub    $0x14,%esp
 804913b:	51                   	push   %ecx
 804913c:	ff d0                	call   *%eax
 804913e:	83 c4 10             	add    $0x10,%esp
 8049141:	c9                   	leave  
 8049142:	c3                   	ret    
 8049143:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8049147:	90                   	nop
 8049148:	c3                   	ret    
 8049149:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08049150 <register_tm_clones>:
 8049150:	e8 84 00 00 00       	call   80491d9 <__x86.get_pc_thunk.dx>
 8049155:	81 c2 ab 2e 00 00    	add    $0x2eab,%edx
 804915b:	55                   	push   %ebp
 804915c:	89 e5                	mov    %esp,%ebp
 804915e:	53                   	push   %ebx
 804915f:	8d 8a 20 00 00 00    	lea    0x20(%edx),%ecx
 8049165:	8d 82 20 00 00 00    	lea    0x20(%edx),%eax
 804916b:	83 ec 04             	sub    $0x4,%esp
 804916e:	29 c8                	sub    %ecx,%eax
 8049170:	89 c3                	mov    %eax,%ebx
 8049172:	c1 e8 1f             	shr    $0x1f,%eax
 8049175:	c1 fb 02             	sar    $0x2,%ebx
 8049178:	01 d8                	add    %ebx,%eax
 804917a:	d1 f8                	sar    %eax
 804917c:	74 14                	je     8049192 <register_tm_clones+0x42>
 804917e:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
 8049184:	85 d2                	test   %edx,%edx
 8049186:	74 0a                	je     8049192 <register_tm_clones+0x42>
 8049188:	83 ec 08             	sub    $0x8,%esp
 804918b:	50                   	push   %eax
 804918c:	51                   	push   %ecx
 804918d:	ff d2                	call   *%edx
 804918f:	83 c4 10             	add    $0x10,%esp
 8049192:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8049195:	c9                   	leave  
 8049196:	c3                   	ret    
 8049197:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804919e:	66 90                	xchg   %ax,%ax

080491a0 <__do_global_dtors_aux>:
 80491a0:	f3 0f 1e fb          	endbr32 
 80491a4:	55                   	push   %ebp
 80491a5:	89 e5                	mov    %esp,%ebp
 80491a7:	53                   	push   %ebx
 80491a8:	e8 53 ff ff ff       	call   8049100 <__x86.get_pc_thunk.bx>
 80491ad:	81 c3 53 2e 00 00    	add    $0x2e53,%ebx
 80491b3:	83 ec 04             	sub    $0x4,%esp
 80491b6:	80 bb 24 00 00 00 00 	cmpb   $0x0,0x24(%ebx)
 80491bd:	75 0c                	jne    80491cb <__do_global_dtors_aux+0x2b>
 80491bf:	e8 4c ff ff ff       	call   8049110 <deregister_tm_clones>
 80491c4:	c6 83 24 00 00 00 01 	movb   $0x1,0x24(%ebx)
 80491cb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80491ce:	c9                   	leave  
 80491cf:	c3                   	ret    

080491d0 <frame_dummy>:
 80491d0:	f3 0f 1e fb          	endbr32 
 80491d4:	e9 77 ff ff ff       	jmp    8049150 <register_tm_clones>

080491d9 <__x86.get_pc_thunk.dx>:
 80491d9:	8b 14 24             	mov    (%esp),%edx
 80491dc:	c3                   	ret    
 80491dd:	66 90                	xchg   %ax,%ax
 80491df:	90                   	nop

080491e0 <nstrcpy>:
 80491e0:	56                   	push   %esi
 80491e1:	53                   	push   %ebx
 80491e2:	8b 5c 24 14          	mov    0x14(%esp),%ebx
 80491e6:	8b 74 24 10          	mov    0x10(%esp),%esi
 80491ea:	53                   	push   %ebx
 80491eb:	e8 80 fe ff ff       	call   8049070 <strlen@plt>
 80491f0:	5a                   	pop    %edx
 80491f1:	39 f0                	cmp    %esi,%eax
 80491f3:	0f 4f c6             	cmovg  %esi,%eax
 80491f6:	85 c0                	test   %eax,%eax
 80491f8:	78 1e                	js     8049218 <nstrcpy+0x38>
 80491fa:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
 80491fe:	89 da                	mov    %ebx,%edx
 8049200:	8d 5c 18 01          	lea    0x1(%eax,%ebx,1),%ebx
 8049204:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8049208:	0f b6 02             	movzbl (%edx),%eax
 804920b:	83 c2 01             	add    $0x1,%edx
 804920e:	83 c1 01             	add    $0x1,%ecx
 8049211:	88 41 ff             	mov    %al,-0x1(%ecx)
 8049214:	39 da                	cmp    %ebx,%edx
 8049216:	75 f0                	jne    8049208 <nstrcpy+0x28>
 8049218:	5b                   	pop    %ebx
 8049219:	5e                   	pop    %esi
 804921a:	c3                   	ret    
 804921b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804921f:	90                   	nop

08049220 <bar>:
 8049220:	81 ec 50 01 00 00    	sub    $0x150,%esp
 8049226:	ff b4 24 54 01 00 00 	pushl  0x154(%esp)
 804922d:	68 50 01 00 00       	push   $0x150
 8049232:	8d 44 24 08          	lea    0x8(%esp),%eax
 8049236:	50                   	push   %eax
 8049237:	e8 a4 ff ff ff       	call   80491e0 <nstrcpy>
 804923c:	81 c4 5c 01 00 00    	add    $0x15c,%esp
 8049242:	c3                   	ret    
 8049243:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804924a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08049250 <foo>:
 8049250:	8b 44 24 04          	mov    0x4(%esp),%eax
 8049254:	8b 40 04             	mov    0x4(%eax),%eax
 8049257:	89 44 24 04          	mov    %eax,0x4(%esp)
 804925b:	eb c3                	jmp    8049220 <bar>

Disassembly of section .fini:

08049260 <_fini>:
 8049260:	f3 0f 1e fb          	endbr32 
 8049264:	53                   	push   %ebx
 8049265:	83 ec 08             	sub    $0x8,%esp
 8049268:	e8 93 fe ff ff       	call   8049100 <__x86.get_pc_thunk.bx>
 804926d:	81 c3 93 2d 00 00    	add    $0x2d93,%ebx
 8049273:	83 c4 08             	add    $0x8,%esp
 8049276:	5b                   	pop    %ebx
 8049277:	c3                   	ret    
